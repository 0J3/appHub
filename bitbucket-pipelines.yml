#  Template npm-publish

#  This template allows you to publish your npm package, as defined in package.json, to npmjs.com or any other npm-like registry.
#  The workflow allows running tests, code linting and security scans on feature branches (as well as master).
#  The npm package will be validated and published after the code is merged to master.

# Prerequisites: $NPM_TOKEN setup in the Deployment variables.
# For advanced cases, please, follow examples from the pipe's README https://bitbucket.org/atlassian/npm-publish/src/master/README.md

image: node:latest

pipelines:
  default:
    - parallel:
        - step:
            name: Build and Test
            caches:
              - node
            script:
              - yarn
              - yarn test
        - step:
            name: Lint the node package
            script:
              - yarn install eslint
              - npx eslint .
            caches:
              - node
  branches:
    master:
      - parallel:
          - step:
              name: Build and Test
              caches:
                - node
              script:
                - yarn
                - yarn test
          - step:
              name: Security Scan
              script:
                # Run a security scan for sensitive data.
                # See more security tools at https://bitbucket.org/product/features/pipelines/integrations?&category=security
                - pipe: atlassian/git-secrets-scan:0.4.3
      - step:
          name: Deploy to Production
          deployment: Production
          script:
            # Update apt repos (just incase)
            - apt update
            # Do things to allow mono to install
            - apt install dirmngr gnupg apt-transport-https ca-certificates -y -f
            - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
            - sh -c 'echo "deb https://download.mono-project.com/repo/ubuntu stable-bionic main" > /etc/apt/sources.list.d/mono-official-stable.list'
            - apt update
            # Ensure base build dependencies are available
            - apt install dpkg fakeroot rpm mono-runtime wine snapd -y -f
            # Install Node Deps
            - yarn
            # Build
            - yarn make
            # Bump versions before publishing
            - npm --no-git-tag-version version "1.0.$BITBUCKET_BUILD_NUMBER" -m "Upgrade to new version"
            # Publish
            - git add .
            - git commit -m "New Version - CI"
            - git push origin bin
